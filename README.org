* Table of Content :TOC_4:
- [[#partitions][Partitions]]
  - [[#bios][BIOS]]
  - [[#uefi][UEFI]]
- [[#packages][Packages]]
  - [[#preparation][Preparation]]
    - [[#cpu-configuration][CPU configuration]]
      - [[#x86_64][x86_64]]
      - [[#i686][i686]]
      - [[#arm][ARM]]
  - [[#cross-tools][Cross tools]]
    - [[#binutils][Binutils]]
    - [[#linux][Linux]]
    - [[#gcc][GCC]]
    - [[#musl][Musl]]
  - [[#final][Final]]
    - [[#toybox][Toybox]]

* Partitions
** BIOS
Here is the way the different will be mounted and formated for a BIOS system.
| Disk      | Mount Point | Size                      | FS type |
|-----------+-------------+---------------------------+---------|
| /dev/sda1 | /boot       | 256M                      | ext4    |
| /dev/sda2 |             | 2G                        | swap    |
| /dev/sda3 | /           | Space left (at least 10G) | ext4    |
First of all, format the partitions:
#+BEGIN_SRC shell
  mkfs.ext4 /dev/sda1
  mkfs.ext4 /dev/sda3
#+END_SRC
Then, activate the swap partition:
#+BEGIN_SRC shell
  mkswap /dev/sda2
  swapon /dev/sda2
#+END_SRC
Finally, mount the partitions in the =/mnt/ylfs= directory:
#+BEGIN_SRC shell
  export YLFS=/mnt/ylfs
  mkdir -pv ${YLFS}
  mount /dev/sda3 ${YLFS}
  mkdir ${YLFS}/boot
  mount /dev/sda1 ${YLFS}/boot
#+END_SRC
** TODO UEFI
* Packages
** Preparation
Prepare the directories for the sources and patches:
#+BEGIN_SRC shell
  mkdir -v ${YLFS}/sources
  mkdir -v ${YLFS}/cross-tools
  mkdir -v ${YLFS}/tools
  mkdir -v ${YLFS}/sources/{patches,files,packages}
#+END_SRC
Link directories:
#+BEGIN_SRC shell
  ln -sv $YLFS/cross-tools /
  ln -sv $YLFS/tools /
#+END_SRC
Create a new user for the installation of tools:
#+BEGIN_SRC shell
  groupadd ylfs
  useradd -s /bin/bash -g ylfs -m -k /dev/null ylfs
  passwd ylfs
#+END_SRC
Adapt the permissions of the build directories:
#+BEGIN_SRC shell
  chown -v  ylfs ${YLFS}/cross-tools
  chown -vR ylfs ${YLFS}/sources
  chmod -v  a+wt ${YLFS}/sources
  chown -v  ylfs ${YLFS}/tools
#+END_SRC
Login as the =ylfs= user:
#+BEGIN_SRC shell
  su - ylfs
#+END_SRC
Clear compilation C flags:
#+BEGIN_SRC shell
  unset CFLAGS
  unset CXXFLAGS
#+END_SRC
Add multicore compilation:
#+BEGIN_SRC shell
  export MAKEFLAGS="-j 4"
#+END_SRC
*** CPU configuration
**** x86_64
Set build options for 64 bit CPUs:
#+BEGIN_SRC shell
  export YLFS_TARGET="x86_64-linux-musl"
  export YLFS_ARCH="x86"
  export YLFS_CPU="x86-64"
#+END_SRC
**** i686
Set build options for 32 bit CPUs:
#+BEGIN_SRC shell
  export YLFS_TARGET="i686-linux-musl"
  export YLFS_ARCH="x86"
  export YLFS_CPU="i686"
#+END_SRC
**** ARM
***** armv7
Set build options for armv7 CPUs:
#+BEGIN_SRC shell
  export YLFS_TARGET="armv7l-linux-musl"
  export YLFS_ARCH="arm"
  export YLFS_CPU="armv7-a"
#+END_SRC
***** armv6
Set build options for armv6 CPUs:
#+BEGIN_SRC shell
  export YLFS_TARGET="armv6l-linux-musl"
  export YLFS_ARCH="arm"
  export YLFS_CPU="armv6"
#+END_SRC
** Cross tools
*** Binutils
Source: https://ftp.gnu.org/gnu/binutils/binutils-2.35.tar.xz
Download and extract the sources:
#+BEGIN_SRC shell
  wget https://ftp.gnu.org/gnu/binutils/binutils-2.35.tar.xz
  tar -xf binutils-2.35.tar.xz
  cd binutils-2.35
#+END_SRC
Create the build directory:
#+BEGIN_SRC shell
  mkdir -v build && cd build
#+END_SRC
Configure source:
#+BEGIN_SRC shell
  ../configure \
     --prefix=/cross-tools \
     --target=${YLFS_TARGET} \
     --with-sysroot=/cross-tools/${YLFS_TARGET} \
     --disable-nls \
     --disable-multilib \
     --disable-werror \
     --enable-deterministic-archives \
     --disable-compressed-debug-sections
#+END_SRC
Build:
#+BEGIN_SRC shell
  make
#+END_SRC
Create a symlink (only on x86_64):
#+BEGIN_SRC shell
  mkdir -v ${YLFS}/tools/lib && ln -sv lib ${YLFS}/tools/lib64
#+END_SRC
Install:
#+BEGIN_SRC shell
  make install
#+END_SRC
*** Linux
Source: https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.8.1.tar.xz
Download and extract the sources:
#+BEGIN_SRC shell
  wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.8.1.tar.xz
  tar -xf linux-5.8.1.tar.xz
  cd linux-5.8.1
#+END_SRC
Clean sources:
#+BEGIN_SRC shell
  make mrproper
#+END_SRC
Build headers:
#+BEGIN_SRC shell
  make headers_check
#+END_SRC
Clean:
#+BEGIN_SRC shell
  rm usr/include/Makefile
#+END_SRC
Install headers:
#+BEGIN_SRC shell
  cp -rv usr/include/* /cross-tools/${YLFS_TARGET}/include
#+END_SRC
*** GCC
Source: https://ftp.gnu.org/gnu/gcc/gcc-10.2.0/gcc-10.2.0.tar.xz
Dependencies:
- https://www.mpfr.org/mpfr-current/mpfr-4.1.0.tar.xz
- https://ftp.gnu.org/gnu/mpc/mpc-1.1.0.tar.gz
- https://ftp.gnu.org/gnu/gmp/gmp-6.2.0.tar.xz
Download sources:
#+BEGIN_SRC shell
  wget https://ftp.gnu.org/gnu/gmp/gmp-6.2.0.tar.xz
  wget https://ftp.gnu.org/gnu/mpc/mpc-1.1.0.tar.gz
  wget https://www.mpfr.org/mpfr-current/mpfr-4.1.0.tar.xz
  wget https://ftp.gnu.org/gnu/gcc/gcc-10.2.0/gcc-10.2.0.tar.xz
#+END_SRC
Extract GCC:
#+BEGIN_SRC shell
  tar -xf gcc-10.2.0.tar.xz
  cd gcc-10.2.0
#+END_SRC
Extract dependencies:
#+BEGIN_SRC shell
  tar -xf ../mpfr-4.1.0.tar.xz
  mv -v mpfr-4.1.0 mpfr
  tar -xf ../gmp-6.2.0.tar.xz
  mv -v gmp-6.2.0 gmp
  tar -xf ../mpc-1.1.0.tar.gz
  mv -v mpc-1.1.0 mpc
#+END_SRC
Create the build directory:
#+BEGIN_SRC shell
  mkdir -v build && cd build
#+END_SRC
Configure the compiler:
#+BEGIN_SRC shell
  CFLAGS='-g0 -O0' \
  CXXFLAGS='-g0 -O0' \
  ../configure \
            --prefix=${YLFS}/cross-tools --build=${MACHTYPE} \
            --host=${MACHTYPE}   --target=${YLFS_TARGET} \
            --with-sysroot=${YLFS}/cross-tools/${YLFS_TARGET} \
            --disable-nls         --with-newlib  \
            --disable-libitm     --disable-libvtv \
            --disable-libssp     --disable-shared \
            --disable-libgomp    --without-headers \
            --disable-threads    --disable-multilib \
            --disable-libatomic  --disable-libstdcxx \
            --enable-languages=c --disable-libquadmath \
            --disable-libsanitizer --with-arch=${YLFS_CPU} \
#+END_SRC
Build and install the only the minimum needed:
#+BEGIN_SRC shell
  make all-gcc all-target-libgcc
  make install-gcc install-target-libgcc
#+END_SRC
*** Musl
Source: https://www.musl-libc.org/releases/musl-1.2.1.tar.gz
Download and extract the sources:
#+BEGIN_SRC shell
  wget https://www.musl-libc.org/releases/musl-1.2.1.tar.gz
  tar -xf musl-1.2.1.tar.gz
  cd musl-1.2.1
#+END_SRC
Configure cross build:
#+BEGIN_SRC shell
  ./configure \
    CROSS_COMPILE=${YLFS_TARGET}- \
    --prefix=/ \
    --target=${YLFS_TARGET}
#+END_SRC
Build and install:
#+BEGIN_SRC shell
  make && DESTDIR=/cross-tools make install
#+END_SRC
Create the missing directory and link the library:
#+BEGIN_SRC shell
  mkdir -v /cross-tools/usr
  ln -sv ../include  /cross-tools/usr/include
#+END_SRC
** Final
*** Toybox
Source: https://landley.net/toybox/downloads/toybox-0.8.3.tar.gz
Download and extract the sources:
#+BEGIN_SRC shell
  wget https://landley.net/toybox/downloads/toybox-0.8.3.tar.gz
  tar -xf toybox-0.8.3.tar.gz
  cd toybox-0.8.3
#+END_SRC
Configure, build and install.
#+BEGIN_SRC shell
  CROSS_COMPILE=$YLFS_CPU make defconfig
  make
  PREFIX=${YLFS}/cross-tools make install
#+END_SRC
